{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGildItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","category","type","placeholder","value","onChange","target","getGif","setImages","a","url","encodeURI","fetch","respuest","json","data","gifs","map","img","id","title","images","downsized_medium","GifGildItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","props","categories","ReactDOM","render","document","getElementById"],"mappings":"oMAmCeA,EAhCK,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAEpB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAcA,OACI,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAQ,OAAMP,GAAN,mBAAsBO,OAC7CN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,YAAY,eACZC,MAAQV,EACRW,SAlBc,SAACR,GACvBF,EAAcE,EAAES,OAAOF,a,8BCRlBG,EAAM,uCAAG,WAAON,EAAWO,GAAlB,uBAAAC,EAAA,4DAEH,mCACTC,EAHY,gDAGoCC,UAAUV,GAH9C,6BAEH,oCAFG,SAIKW,MAAOF,GAJZ,cAIZG,EAJY,gBAKKA,EAASC,OALd,uBAKVC,EALU,EAKVA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAKD,EAAIC,GACTC,MAAQF,EAAIE,MACZV,IAAG,UAAGQ,EAAIG,cAAP,aAAG,EAAYC,iBAAiBZ,QAXzB,kBAgBXM,GAhBW,4CAAH,wDCiBJO,MAdf,YAA0C,EAAnBJ,GAAoB,IAAfC,EAAc,EAAdA,MAAQV,EAAM,EAANA,IAChC,OACI,sBAAKc,UAAU,yCAAf,UACG,qBAAKC,IAAMf,EAAMgB,IAAKN,IACtB,4BAAIA,QCsBAO,EAxBC,SAAC,GAAgB,IAAf1B,EAAc,EAAdA,SAEd,ECJwB,SAAEA,GAE1B,MAA0BR,mBAAS,CAC/BsB,KAAO,GACPa,SAAU,IAFd,mBAAOC,EAAP,KAAcC,EAAd,KAaA,OARAC,qBAAW,WACPxB,EAAQN,GAAW+B,MAAM,SAAAC,GAAI,OAAIH,EAAU,CACvCf,KAAOkB,EACPL,SAAU,SAEf,CAAE3B,IAGE4B,EDX0BK,CAAcjC,GAAlCoB,EAAb,EAAQN,KAAaa,EAArB,EAAqBA,QAErB,OACI,qCACI,6BAAK3B,IAEH2B,GAAW,mBAAGJ,UAAU,mCAAb,yBACb,qBAAKA,UAAU,YAAf,SAEQH,EAAOJ,KAAK,SAACC,GAAD,OACR,wBAAC,EAAD,2BAAiBA,GAAjB,IAAuBiB,IAAKjB,EAAIC,eEwBzCiB,EApCM,SAAAC,GAEjB,MAAoC5C,mBAAS,CAAC,gBAA9C,mBAAO6C,EAAP,KAAmB9C,EAAnB,KAUA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEQ8C,EAAWrB,KAAI,SAAAhB,GAAQ,OACnB,cAAC,EAAD,CAEIA,SAAUA,GADLA,Y,MCtBjCsC,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.87e0d5f6.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst AddCategory = ( { setCategories } ) => {\r\n\r\n    const [inputValue, setinputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setinputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        if( inputValue.trim().length > 2 ){\r\n            setCategories( category => [ inputValue , ...category  ] );\r\n            setinputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} >\r\n            <input  \r\n                type='text' \r\n                placeholder='Categoria...' \r\n                value={ inputValue } \r\n                onChange= { handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories : PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory;","export const getGif = async( category , setImages) => {\r\n        \r\n    const apiKey = 'HRdnbyXM9939bzQv8qFljHUnBxX74ePV';\r\n    const url = `http://api.giphy.com/v1/gifs/search?q=${ encodeURI(category)}&limit=10&api_key=${apiKey}`;\r\n    const respuest = await fetch( url );\r\n    const { data } = await respuest.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id : img.id,\r\n            title : img.title,\r\n            url : img.images?.downsized_medium.url\r\n            \r\n        }\r\n    });\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n// import PropTypes from 'prop-types'\r\n\r\nfunction GifGildItem( {id , title , url}) {\r\n    return (\r\n        <div className='card animate__animated animate__fadeIn'>\r\n           <img src={ url } alt={title} />\r\n           <p>{title}</p>\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nGifGildItem.propTypes = {\r\n\r\n}\r\n\r\nexport default GifGildItem\r\n\r\n","import React  from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport GifGildItem from './GifGildItem';\r\n// import PropTypes from 'prop-types'\r\n\r\nconst GifGrid = ({category}) => {\r\n\r\n    const { data:images, loading } = useFetchGifs( category ); \r\n    \r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n\r\n            { loading && <p className='animate__animated animate__flash' >Cargando...</p> }\r\n            <div className='card-grid'>\r\n                {\r\n                    images.map( (img) => (\r\n                        <GifGildItem {...img } key={img.id} />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nGifGrid.propTypes = {\r\n\r\n}\r\n\r\nexport default GifGrid\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGif } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data : [],\r\n        loading : true\r\n    })\r\n\r\n    useEffect( () => {\r\n        getGif( category ).then( imgs => setState( {\r\n            data : imgs,\r\n            loading : false\r\n        } ) );\r\n    }, [ category ] );\r\n\r\n\r\n    return state;\r\n}","import React, { useState } from 'react'\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n// import PropTypes from 'prop-types'\r\n\r\nconst GifExpertApp = props => {\r\n\r\n    const [categories, setCategories] = useState(['Dragon Ball']);\r\n\r\n    // const handleAdd = () =>{\r\n    //     // const aux= [...categories , 'Full Mental'];\r\n    //     // setCategories(aux);\r\n    //     setCategories( cate => {\r\n    //         return [ ...cate , 'Full Metal' ];\r\n    //     });\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories} />\r\n            <hr />\r\n\r\n            <ol>\r\n                {\r\n                    categories.map(category => (\r\n                        <GifGrid \r\n                            key={category}\r\n                            category={category} \r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\nGifExpertApp.propTypes = {\r\n\r\n}\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}